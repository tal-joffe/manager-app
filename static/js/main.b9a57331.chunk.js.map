{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","step","setStep","useState","problem","setProblem","solution","setSolution","input","setInput","React","createElement","className","onSubmit","event","preventDefault","type","value","onChange","e","target","placeholder","required","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"kNA6DeA,MA1Df,WACE,MAAOC,EAAMC,GAAWC,mBAAS,IAC1BC,EAASC,GAAcF,mBAAS,KAChCG,EAAUC,GAAeJ,mBAAS,KAClCK,EAAOC,GAAYN,mBAAS,IAenC,OACEO,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,WACY,IAATV,GACCS,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,iEAGG,IAATV,GACCS,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,2BAAyBP,EAAQ,6DAG9B,IAATH,GACCS,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,2DACHD,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,YAAiB,IAAEP,GAC9BM,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,sBAA2B,IAAEL,MAK/CL,EAAO,GACNS,IAAAC,cAAA,QAAME,SArCUC,IACpBA,EAAMC,iBACO,IAATd,GACFI,EAAWG,GACXC,EAAS,IACTP,EAAQ,IACU,IAATD,IACTM,EAAYC,GACZC,EAAS,IACTP,EAAQ,MA6BJQ,IAAAC,cAAA,SACEK,KAAK,OACLC,MAAOT,EACPU,SAAWC,GAAMV,EAASU,EAAEC,OAAOH,OACnCI,YAAsB,IAATpB,EAAa,2BAA6B,wBACvDqB,UAAQ,IAEVZ,IAAAC,cAAA,UAAQK,KAAK,UAAS,aC1CjBO,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3B,IAAAC,cAACD,IAAM4B,WAAU,KACf5B,IAAAC,cAACX,EAAG,QAORuB,K","file":"static/js/main.b9a57331.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [step, setStep] = useState(1);\n  const [problem, setProblem] = useState('');\n  const [solution, setSolution] = useState('');\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (step === 1) {\n      setProblem(input);\n      setInput('');\n      setStep(2);\n    } else if (step === 2) {\n      setSolution(input);\n      setInput('');\n      setStep(3);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        {step === 1 && (\n          <div>\n            <p>Hello! What is the problem you are looking to get help with?</p>\n          </div>\n        )}\n        {step === 2 && (\n          <div>\n            <p>I see your problem is: \"{problem}\". What do you think should be the best way to solve it?</p>\n          </div>\n        )}\n        {step === 3 && (\n          <div>\n            <p>OK! Looks like you know what to do. Go ahead and do it!</p>\n            <div>\n              <p><strong>Problem:</strong> {problem}</p>\n              <p><strong>Proposed Solution:</strong> {solution}</p>\n            </div>\n          </div>\n        )}\n      </div>\n      {step < 3 && (\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder={step === 1 ? 'Describe your problem...' : 'Propose a solution...'}\n            required\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}